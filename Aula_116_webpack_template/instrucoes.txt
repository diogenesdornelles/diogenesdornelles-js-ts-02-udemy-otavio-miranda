// npm init -y

// npm i --save-dev @babel/preset-env @babel/cli @babel/core babel-loader webpack webpack-cli

// npm i core-js regenerator-runtime

// gitignore -> node_modules

// mesmo que se apague node_modules, npm i baixa todas as dependências em package.json

// criar webpack.config.js

// configurá-lo:

// criar pasta src na raiz (source) e inserir o index.js

// criar a pasta public na raiz (a que o usuário enxerga) e nela os assets (com css, javascript, images)

// modificar config script em package.json:

// executar script: npm run loadwebpack

// durante a construção da aplicação, alterar sempre o index em source.

// incluir no HTML bundle.js em public

// apagar node_modules

// instalando plugin minimizer

// npm install terser-webpack-plugin --save-dev

// https://webpack.js.org/plugins/terser-webpack-plugin/

// instalar css

// alterar rules em webpack.config

// npm install style-loader css-loader

// importar arquivos css em index.js